#!/bin/bash
# -------------------------------------------------------------------------- #
# Copyright 2013, Gareth Bult <gareth@linux.co.uk>                           #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #
ROOT=$(dirname $(dirname $(dirname $0)))
source ${ROOT}/hooks/vdc/common.sh

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/NAME \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/VG_NAME)

HOST="${XPATH_ELEMENTS[0]}"
VG_NAME="${XPATH_ELEMENTS[1]}"

vdc_log "* running Monitor against '${HOST}' ($2)"

if [ -z $VG_NAME ]
then
        vdc_log "* VG_NAME is missing from the config for '${HOST}' ($2)"
	echo "TOTAL_MB=0 FREE_MB=0 USED_MB=0"
	exit 0
fi

MONITOR_SCRIPT=$(cat <<EOF
VG_OPTS="--units M -C --noheadings --nosuffix $VG_NAME" ;
TOTAL_MB=\$(sudo vgdisplay -o vg_size \$VG_OPTS|tr -d " " ) ;
FREE_MB=\$(sudo vgdisplay -o vg_free \$VG_OPTS|tr -d " " ) ;
USED_MB=\$(awk "BEGIN { print \$TOTAL_MB - \$FREE_MB } ") ;
echo "TOTAL_MB=\$TOTAL_MB FREE_MB=\$FREE_MB USED_MB=\$USED_MB"
EOF
)

MONITOR_DATA=$(ssh_monitor_and_log "$HOST" "$MONITOR_SCRIPT")
MONITOR_STATUS=$?

if [ "$MONITOR_STATUS" = "0" ]; then
    echo "$MONITOR_DATA" | tr ' ' '\n'
else
    vdc-log "* DS MONITOR Error: ${MONITOR_DATA}"
    echo "$MONITOR_DATA"
    exit $MONITOR_STATUS
fi
exit 0
